Список
Изменяемый, может ссылаться на разнотиповые объекты

A = [1, 2, 3]

A.append(45) # добавка в конец
len(A)		#кол-во элементов в списке

A = [(1, 10), (2, 20), (3, 30)]  # список кортежей

for i in A:   # for i in range(len(A)):
    angle, length = A[i]
    turtle.forward(length)

ИЛИ

for T in A:   
    angle, length = T
    turtle.forward(length)

ИЛИ

for angle, length in A:	# если знаем что в A по два элемента

ВЫВОД

city = ("Moscow", 125789, "Capital")
print(city[:1]) 	# ['Moscow']
print(city[1 : 3])	# [125789, 'Capital']

[0 : 3] с 0 до 4-ого элемента не включая 4-ий
[ : 1] от начала до 2-ого не включая
[2 : ] от 3 до конца
Немерация происходит от 0

---------

b = [1,2,3,4,5]
b[0:2] = 55,45
[55,45,3,4,5]

b = [1,2,3,4,5]	
b[0:3] = 55,33	# Диапазону присваем меньшее кол-во элементов тогда удалится часть элементов
		# работает только для 2-х и больше элементов после знака равно
[55,33,4,5]
___________________________
ЗАПОЛНЕНИЕ
___________________________

# Плохой вариант
squares = []
for i in range(10):
	squares.append(i*i)

# Лучше
squares = [i*i for i in range(10)]

___________________________
Проверка есть ли элемент в списке
a = [45, 56, 74, 'Hello']
56 in a
True

____________________________
a = [10 , 56, 88, 153]
max (a)		только числа
min (a)		только числа
sum (a)		только числа
sum(a)/len(a)	среднее арифмет
sorted (a)	список должен состоять полностью из чисел или строк
sorted (a, reverse=True)

[100, 1] > [33, 55]  True	Сравнивает по первому элементу, список должен состоять полностью из чисел или строк
==				True если списки полность одинаковые